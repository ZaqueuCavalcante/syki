name: PR Tests

on:
  pull_request:
    branches: [ master ]

jobs:
  pr-tests:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: write

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.100-preview.6.25358.103

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: |
        dotnet test \
        --no-restore \
        --no-build \
        --configuration Release \
        --verbosity normal \
        --logger "trx;LogFileName=test_results.trx" \
        --collect:"XPlat Code Coverage" \
        --results-directory ./TestResults \
        -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - name: Combine Coverage Reports
      uses: danielpalme/ReportGenerator-GitHub-Action@v5.4.10
      with:
        reports: "**/*.cobertura.xml"
        targetdir: "coverage-html"
        reporttypes: "HtmlInline_AzurePipelines;Cobertura"
        verbosity: "Info"
        title: "PR #${{ github.event.number }}"
        tag: "${{ github.run_number }}_${{ github.run_id }}"
        toolpath: "reportgeneratortool"

    - name: Upload Combined Coverage XML
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-pr-${{ github.event.number }}
        path: coverage-html
        retention-days: 5

    - name: Publish Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "coverage-html/Cobertura.xml"
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: "70 80"

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Publish Coverage to https://zaqueucavalcante.github.io/syki/pr/<PR_NUMBER>
      if: github.event.pull_request.head.repo.fork == false
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: coverage-html
        destination_dir: pr/${{ github.event.number }}
        keep_files: true

    - name: Comment link to Coverage (Pages)
      if: github.event.pull_request.head.repo.fork == false
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: coverage-pages-link
        message: |
          ðŸ“Š **Full HTML Coverage report**:
          https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr/${{ github.event.number }}/

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.20.0
      if: always()
      with:
        files: "**/*.trx"
        check_run: ${{ github.event.pull_request.head.repo.fork == false }}
