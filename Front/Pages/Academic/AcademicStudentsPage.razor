@using Syki.Front.Features.Academic.CreateStudent

@namespace Syki.Front.Pages.Academic

@page "/academic/students"
@attribute [Authorize(Roles = "Academic")]

<SykiPageTitle Title="Alunos" />

<MudContainer Class="my-4 px-4">
    <SykiPageHeader Icon="@Icons.Material.Filled.People" Title="Alunos" ButtonText="Novo Aluno" OnClick="@OpenDialog" />
    <SykiPageAlert Text="Um aluno precisa necessariamente estar vinculado à uma oferta de curso." />
    <MudContainer Class="px-0 mb-4">
        <MudTable
            Class="pa-4"
            Items="@_students"
            Filter="@_quickFilter"
            Dense
            Hover
            Loading="@_loading"
            RowsPerPage="10"
        >
            <ToolBarContent>
                <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por qualquer atributo"/>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Nome</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Matrícula</MudTh>
                <MudTh>Curso</MudTh>
                <AuthorizeView Policy="@FrontPolicy.CrossLogin" Context="authContext">
                    <MudTh></MudTh>
                </AuthorizeView>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nome">@context.Name</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="Matrícula">@context.EnrollmentCode</MudTd>
                <MudTd DataLabel="Curso">@context.CourseOffering</MudTd>
                <AuthorizeView Policy="@FrontPolicy.CrossLogin" Context="authContext">
                    <MudTd>
                        <MudTooltip Text="Cross Login" Arrow Placement="Placement.Top" ShowOnFocus="false">
                            <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Login" OnClick="@(() => CrossLogin(context))" />
                        </MudTooltip>
                    </MudTd>
                </AuthorizeView>
            </RowTemplate>
            <LoadingContent>
                @if (_breakpoint == Breakpoint.Xs)
                {
                    <MudProgressLinear Color="Color.Info" Indeterminate />
                }
            </LoadingContent>
            <NoRecordsContent>
                @(GetNotFoundMessage())
            </NoRecordsContent>
            <PagerContent>
                <SykiTablePager />
            </PagerContent>
        </MudTable>
    </MudContainer>
</MudContainer>

@inject NavigationManager Nav
@inject GetStudentsClient Client
@inject IDialogService DialogService
@inject CrossLoginClient CrossLoginClient
@inject IBrowserViewportService BrowserViewportService

@code
{
    private bool _loading;
    private string _searchString;
    private List<StudentOut> _students = [];

    private Breakpoint _breakpoint;

    protected override async Task OnInitializedAsync()
    {
        _breakpoint = await BrowserViewportService.GetCurrentBreakpointAsync();
        _loading = true;
        _students = await Client.Get();
        _loading = false;
    }

    private async Task CrossLogin(StudentOut student)
    {
        _loading = true;
        await CrossLoginClient.Login(student.Id);
        Nav.NavigateTo("/", forceLoad: true);
        _loading = false;
    }

    private Func<StudentOut, bool> _quickFilter => x => _searchString.IsIn(x.Name, x.Email, x.EnrollmentCode, x.CourseOffering);

    private async Task OpenDialog()
    {
        var breakpoint = await BrowserViewportService.GetCurrentBreakpointAsync();
        var options = new DialogOptions {
            MaxWidth = MaxWidth.Small,
            FullWidth = true,
            FullScreen = breakpoint == Breakpoint.Xs,
        };
        var dialog = await DialogService.ShowAsync<CreateStudentDialog>("", options);

        var result = await dialog.Result;

        if (result!.Canceled) return;
        
        await OnInitializedAsync();
    }

    private string GetNotFoundMessage()
    {
        return (_searchString.IsEmpty()) ? "Não existem alunos cadastrados ainda." : "Nenhum aluno encontrado.";
    }
}
