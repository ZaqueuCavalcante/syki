@namespace Syki.Front.Components.Agenda

<MudContainer Class="@Class">
    <MudGrid Spacing="2" Justify="Justify.SpaceBetween">
        @if (Days.Count == 0)
        {
            <MudItem xs="12" sm="12" md="12" lg="12">
                <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Class="py-4">
                    <MudPaper Class="px-4 py-4" Style="height: 100%">
                        <MudText>SEM HOR√ÅRIOS PARA EXIBIR</MudText>
                    </MudPaper>
                </MudStack>
            </MudItem>
        }

        @foreach (AgendaDayOut day in GetDays())
        {
            <MudItem xs="12" sm="6" md="4" lg="2">
                <MudPaper Class="pb-3" Style="height: 100%">
                    <MudStack AlignItems="AlignItems.Center" Spacing="1">
                        <MudText Class="mt-1" Typo="Typo.h6">@day.Day.GetDescription()</MudText>
                        <MudDivider/>
                        @foreach (AgendaDisciplineOut item in day.Disciplines)
                        {
                            <MudPaper Class="border-solid mt-2" Style="width: 90%; border-width: 1px;">
                                <MudText Align="Align.Center" Class="pa-2 pt-2" Typo="Typo.body2">@item.Name</MudText>
                                <MudText Align="Align.Center" Class="px-2 pb-2" Typo="Typo.body2"><strong>@item.Start.GetDescription() - @item.End.GetDescription()</strong></MudText>
                            </MudPaper>
                        }
                    </MudStack>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code
{
    [CascadingParameter(Name = "Days")]
    public List<AgendaDayOut> Days { get; set; }

    [Parameter]
    public string Class { get; set; }
    
    private List<AgendaDayOut> GetDays()
    {
        return Days.OrderBy(d => d.Day).ToList();
    }
}
