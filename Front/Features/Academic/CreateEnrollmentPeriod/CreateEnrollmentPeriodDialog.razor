@namespace Syki.Front.Features.Academic.CreateEnrollmentPeriod

<MudDialog Class="pb-2" Style="min-height: 450px" DefaultFocus="DefaultFocus.None">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1 mb-n1" />
            Novo Período de Matrícula
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="@_form" Class="py-1">
            <MudGrid Spacing="2">
                <MudItem xs="12">
                    <MudSelect
                        Dense="true"
                        AutoFocus="true"
                        Margin="Margin.Dense"
                        Variant="Variant.Outlined"
                        Class="mb-4"
                        @bind-Value="@_id"
                        Label="Período Acadêmico"
                        Required="true"
                        RequiredError="Informe!"
                        AdornmentColor="Color.Primary"
                    >
                        @foreach (string? item in _periods.ConvertAll(p => p.Id))
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <SykiDatePicker Label="Início" @bind-Date="@_start" Editable="false" />
                </MudItem>
                <MudItem xs="12">
                    <SykiDatePicker Label="Fim" @bind-Date="@_end" Editable="false" />
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <DialogCancelButton OnClick="@Cancel" />
        <SykiProgressCircular Loading="@_loading" />
        <DialogSaveButton OnClick="@Submit" />
    </DialogActions>
</MudDialog>

@inject ISnackbar Snackbar
@inject GetAcademicPeriodsClient GetClient
@inject CreateEnrollmentPeriodClient CreateClient

@code
{
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }

    private MudForm _form;
    private bool _loading;

    private string _id;
    private DateTime? _start;
    private DateTime? _end;

    List<AcademicPeriodOut> _periods = [];

    protected override async Task OnInitializedAsync()
    {
        _periods = await GetClient.Get();
    }

    async Task Submit()
    {
        if (_loading) return;

        await _form.Validate();
        if (!_form.IsValid) return;

        var start = DateOnly.FromDateTime(_start!.Value);
        var end = DateOnly.FromDateTime(_end!.Value);

        _loading = true;
        var response = await CreateClient.Create(_id, start, end);
        if (response.IsSuccess)
        {
            MudDialog.Close(DialogResult.Ok(true));
            Snackbar.Add("Período cadastrado com sucesso!", Severity.Success);
        }
        else
        {
            Snackbar.Add(response.Error.Message, Severity.Error);
        }
        _loading = false;
    }

    void Cancel() => MudDialog.Cancel();
}
