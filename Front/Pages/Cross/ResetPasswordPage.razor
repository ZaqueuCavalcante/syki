@using Syki.Front.Components.Passwords

@namespace Syki.Front.Pages.Cross

@page "/reset-password"

<SykiPageTitle Title="Redefinir senha" />

<MudContainer Class="mt-4 mb-8" MaxWidth="MaxWidth.ExtraSmall">
    <MudOverlay @bind-Visible="@_loading" LightBackground Absolute="false">
        <MudProgressCircular Color="Color.Info" Indeterminate Size="Size.Large" />
    </MudOverlay>
    <MudForm>
        <MudCard Class="px-4 pt-0 pb-4">
            <MudImage Src="logo_512x512.png" Alt="Syki" Elevation="25" Class="rounded-lg mx-20 mt-10 mb-10"/>
            @if (_saved)
            {
                <MudStack AlignItems="AlignItems.Center">
                    <MudAlert NoIcon Class="mt-6" Severity="Severity.Success" Variant="Variant.Text" ContentAlignment="HorizontalAlignment.Center" Elevation="1">
                        <MudText>Pronto, agora é só logar!</MudText>
                    </MudAlert>
                    <MudButton
                        Size="Size.Large"
                        OnClick="@GoToLogin"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="mx-auto mb-4 px-12">
                        Ir pro login
                    </MudButton>
                </MudStack>
            }
            else
            {
                <MudCardContent Class="pt-0 pb-2 px-0">
                    <PasswordTextField Value="@_setup.Password" ValueChanged="@HandlePasswordChange" Class="pb-2 px-4" Required="false"/>
                    <PasswordRequerimentsCard @bind-Validation="@_setup.Validation"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton
                        Size="Size.Large"
                        OnClick="@Submit"
                        Disabled="@(!_setup.IsValid())"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="mx-auto mb-4 px-12">
                        SALVAR
                    </MudButton>
                </MudCardActions>
            }
        </MudCard>
    </MudForm>
</MudContainer>

@inject ISnackbar Snackbar
@inject NavigationManager Nav
@inject ResetPasswordClient Client

@code
{
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Token { get; set; }

    private bool _saved;
    private bool _loading;
    private SetupPassword _setup = new();

    private void HandlePasswordChange(string newValue)
    {
        _setup.Password = newValue;
        _setup.Validate();
    }

    private void GoToLogin()
    {
        Nav.NavigateTo("/login");
    }

    private async Task Submit()
    {
        _loading = true;
        var response = await Client.Reset(Token, _setup.Password );
        if (response.IsSuccessStatusCode)
        {
            _saved = true;
        }
        else
        {
            var error = await response.ToError();
            Snackbar.Add(error.Message, Severity.Error);
        }
        _loading = false;
    }
}
