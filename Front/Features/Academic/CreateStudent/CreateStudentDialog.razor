@namespace Syki.Front.Features.Academic.CreateStudent

<MudDialog Class="pb-2" DefaultFocus="DefaultFocus.None">
    <TitleContent>
        <SykiDialogTitle Text="Novo Aluno" />
    </TitleContent>
    <DialogContent>
        <MudForm @ref="@_form" Class="pt-1">
            <SykiTextField Label="Nome" AutoFocus="true" @bind-Value="@_name" />
            <SykiTextField Label="Email" @bind-Value="@_email" />
            <MudSelect
                Dense="true"
                Disabled="@(_courseOfferings.Count == 0)"
                Margin="Margin.Dense"
                Variant="Variant.Outlined"
                Class="mb-2"
                @bind-Value="@_courseOffering"
                Label="Oferta"
                Required="true"
                RequiredError="Informe!"
                AdornmentColor="Color.Primary
            ">
                @foreach (CourseOfferingOut? item in _courseOfferings)
                {
                    <MudSelectItem Value="@item">@item.ToString()</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <DialogCancelButton OnClick="@Cancel" />
        <SykiProgressCircular Loading="@_loading" />
        <DialogSaveButton OnClick="@Submit" />
    </DialogActions>
</MudDialog>

@inject ISnackbar Snackbar
@inject CreateStudentClient CreateStudentClient
@inject GetCourseOfferingsClient GetCourseOfferingsClient

@code
{
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }

    private MudForm _form;
    private bool _loading;

    private CourseOfferingOut? _courseOffering;
    private List<CourseOfferingOut> _courseOfferings = [];

    private string _name;
    private string _email;

    protected override async Task OnInitializedAsync()
    {
        _courseOfferings = await GetCourseOfferingsClient.Get();
    }

    async Task Submit()
    {
        if (_loading) return;

        await _form.Validate();
        if (!_form.IsValid) return;

        var courseOfferingId = _courseOffering!.Id;

        _loading = true;
        var response = await CreateStudentClient.Create(_name, _email, courseOfferingId);
        if (response.IsSuccess)
        {
            MudDialog.Close(DialogResult.Ok(true));
            Snackbar.Add("Aluno cadastrado com sucesso!", Severity.Success);
        }
        else
        {
            Snackbar.Add(response.Error.Message, Severity.Error);
        }
        _loading = false;
    }

    void Cancel() => MudDialog.Cancel();
}
