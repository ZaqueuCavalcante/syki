@namespace Syki.Front.Features.Academic.CreateNotification

<MudDialog Class="pb-2" DefaultFocus="DefaultFocus.None">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1 mb-n1" />
            Nova Notificação
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="@_form" Class="pt-1">
            <SykiTextField Label="Título" AutoFocus @bind-Value="@_title" />
            <SykiTextField Label="Descrição" @bind-Value="@_description" />
            <MudSelect
                Dense
                Margin="Margin.Dense"
                Variant="Variant.Outlined"
                Class="mb-4"
                @bind-Value="@_targetUsers"
                Label="Usuários"
                Required
                RequiredError="Informe!"
                AdornmentColor="Color.Primary"
            >
                @foreach (UsersGroup? item in Enum.GetValues<UsersGroup>())
                {
                    <MudSelectItem Value="@item">@item.GetDescription()</MudSelectItem>
                }
            </MudSelect>
            <MudStack Row AlignItems="AlignItems.Center" Spacing="1" Class="pl-0">
                <MudCheckBox @bind-Value="@_timeless" Label="Notificar novos usuários?" Color="Color.Primary" />
                <MudTooltip Text="Se marcado, usuários criados após a notificação também irão recebê-la." Arrow Placement="Placement.Bottom">
                    <MudIconButton Icon="@Icons.Material.Filled.Info" Size="Size.Small" />
                </MudTooltip>
            </MudStack>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <DialogCancelButton OnClick="@Cancel" />
        <SykiProgressCircular Loading="@_loading" />
        <DialogSaveButton OnClick="@Submit" />
    </DialogActions>
</MudDialog>

@inject ISnackbar Snackbar
@inject CreateNotificationClient Client

@code
{
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }

    private MudForm _form;
    private bool _loading;

    private string _title;
    private string _description;
    private UsersGroup? _targetUsers;
    private bool _timeless;

    private async Task Submit()
    {
        if (_loading) return;

        await _form.Validate();
        if (!_form.IsValid) return;

        _loading = true;
        var response = await Client.Create(_title, _description, _targetUsers!.Value, _timeless);
        if (response.IsSuccessStatusCode)
        {
            MudDialog.Close(DialogResult.Ok(true));
            Snackbar.Add("Notificação cadastrada com sucesso!", Severity.Success);
        }
        else
        {
            var error = await response.ToError();
            Snackbar.Add(error.Message, Severity.Error);
        }
        _loading = false;
    }

    private void Cancel() => MudDialog.Cancel();
}
