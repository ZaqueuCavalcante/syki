name: PR Tests

on:
  pull_request:
    branches: [ master ]

jobs:
  tests:
    permissions: write-all
    runs-on: ubuntu-latest
    name: Tests

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 10.0.100-preview.6.25358.103

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        output: both
        format: markdown
        indicators: true
        thresholds: '55 55'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
      with:
        reports: coverage/**/coverage.cobertura.xml
        targetdir: coveragereport

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: coveragereport

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: coveragereport

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: tests

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
