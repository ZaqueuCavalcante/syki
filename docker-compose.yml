services:
  db:
    image: 'postgres:17.4-alpine3.21'
    container_name: db
    hostname: db_host
    restart: unless-stopped
    environment:
      POSTGRES_DB: syki-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    networks:
      - sykinet
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./Scripts/s.sql:/docker-entrypoint-initdb.d/s.sql 
    command: ["postgres", "-c", "max_connections=1500", "-c", "max_prepared_transactions=64", "-c", "log_statement=all"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d syki-db -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  back:
    container_name: back
    build:
      context: .
      dockerfile: Dockerfile.back
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: http://+:5001
      ASPNETCORE_ENVIRONMENT: Development
      Database__ConnectionString: UserID=postgres;Password=postgres;Host=db_host;Port=5432;Database=syki-db;Pooling=true;
    ports:
      - '5001:5001'
    networks:
      - sykinet

  front:
    container_name: front
    build:
      context: .
      dockerfile: Dockerfile.front
    restart: unless-stopped
    depends_on:
      - back
    ports:
      - '5002:80'
    networks:
      - sykinet

  daemon:
    container_name: daemon
    build:
      context: .
      dockerfile: Dockerfile.daemon
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: http://+:5003
      ASPNETCORE_ENVIRONMENT: Development
      Database__ConnectionString: UserID=postgres;Password=postgres;Host=db_host;Port=5432;Database=syki-db;Pooling=true;Keepalive=60;
    ports:
      - '5003:5003'
    networks:
      - sykinet

networks:
  sykinet:
    driver: bridge

volumes:
  pgdata: