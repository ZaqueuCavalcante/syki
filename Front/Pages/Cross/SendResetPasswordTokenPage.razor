@namespace Syki.Front.Pages.Cross

@page "/reset-password-token"

<SykiPageTitle Title="Recuperar senha" />

<MudContainer Class="mt-4 mb-8" MaxWidth="MaxWidth.ExtraSmall">
    <MudOverlay @bind-Visible="@_loading" LightBackground Absolute="false">
        <MudProgressCircular Color="Color.Info" Indeterminate Size="Size.Large" />
    </MudOverlay>
    <MudForm @ref="@_form">
        <MudCard Class="px-4 pt-0 pb-4">
            <MudImage Src="logo_512x512.png" Alt="Syki" Elevation="25" Class="rounded-lg mx-20 mt-10 mb-5"/>
            @if (_saved)
            {
                <MudAlert NoIcon Class="mt-2 mb-6" Severity="Severity.Success" Variant="Variant.Text" ContentAlignment="HorizontalAlignment.Center" Elevation="1">
                    <MudText>Verifique seu email e utilize o link para redefinir a senha.</MudText>
                </MudAlert>
            }
            else
            {
                <MudCardContent>
                    <MudTextField
                        InputType="InputType.Email"
                        Margin="Margin.Dense"
                        AutoFocus
                        Label="Email"
                        Class="mt-3"
                        OnlyValidateIfDirty
                        @bind-Value="@_email"
                        Variant="Variant.Outlined"
                        Required
                        RequiredError="Informe!"/>
                </MudCardContent>
                <MudCardActions Class="justify-center">
                    <MudButton
                        OnClick="@Submit"
                        Size="Size.Large"
                        Color="Color.Primary"
                        Variant="Variant.Filled"
                        Class="mb-4 px-12 my-0">
                        Recuperar
                    </MudButton>
                </MudCardActions>
            }
        </MudCard>
    </MudForm>
</MudContainer>

@inject ISnackbar Snackbar
@inject SendResetPasswordTokenClient Client

@code
{
    private bool _saved;
    private bool _loading;
    private MudForm _form;
    private string _email;

    private async Task Submit()
    {
        await _form.Validate();
        if (!_form.IsValid) return;

        _loading = true;
        var response = await Client.Send(_email);
        if (response.IsSuccessStatusCode)
        {
            _saved = true;
        }
        else
        {
            var error = await response.ToError();
            Snackbar.Add(error.Message, Severity.Error);
        }
        _loading = false;
    }
}
