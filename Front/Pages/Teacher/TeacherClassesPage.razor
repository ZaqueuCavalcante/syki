@namespace Syki.Front.Pages.Teacher

@page "/teacher/classes"
@attribute [Authorize(Roles = "Teacher")]

<SykiPageTitle Title="Turmas" />

<MudContainer Class="my-4 px-4">
    <SykiPageHeader Icon="@Icons.Material.Filled.CenterFocusStrong" Title="Turmas" />
    <SykiPageAlert Text="Em uma mesma turma podem estudar alunos de diferentes cursos." />
    <MudContainer Class="px-0 mb-4">
        <MudDataGrid Class="pa-4" Items="@_classes" QuickFilter="@_quickFilter" Hover Loading="@_loading" Dense RowsPerPage="10">
            <ToolBarContent>
                <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por qualquer atributo" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Discipline" Title="Disciplina" />
                <PropertyColumn Property="x => x.Period" Title="Período" />
                <PropertyColumn Property="x => x.SchedulesInline" Title="Horário" />
                <TemplateColumn CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.RemoveRedEye" OnClick="@(() => GoToClass(context.Item))" />
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
            <NoRecordsContent>
                @(GetNotFoundMessage())
            </NoRecordsContent>
            <PagerContent>
                <SykiDataGridPager T="TeacherClassesOut" />
            </PagerContent>
        </MudDataGrid>
    </MudContainer>
</MudContainer>

@inject NavigationManager Nav
@inject GetTeacherClassesClient GetTeacherClassesClient

@code
{
    private bool _loading;
    private string _searchString;
    private List<TeacherClassesOut> _classes = [];

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _classes = await GetTeacherClassesClient.Get();
        _loading = false;
    }

    private void GoToClass(TeacherClassesOut item)
    {
        Nav.NavigateTo($"/teacher/classes/{item.Id}");
    }

    private Func<TeacherClassesOut, bool> _quickFilter => x => _searchString.IsIn(x.Discipline, x.Period);

    private string GetNotFoundMessage()
    {
        return _searchString.IsEmpty() ? "Não existem turmas cadastradas ainda." : "Nenhuma turma encontrada.";
    }
}
